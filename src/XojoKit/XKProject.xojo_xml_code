<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2022r2" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="1868421119">
 <ObjName>XKProject</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>906502143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(manifest As FolderItem)</SourceLine>
   <SourceLine>Self.Manifest = manifest</SourceLine>
   <SourceLine>Self.ItemContainers = New Dictionary</SourceLine>
   <SourceLine>Self.Options = New XKOptions</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>manifest As FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FolderItemFromManifestPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the FolderItem referenced by `path`, optionally relative to `relativeTo`. May raise a `XodocException`.</CodeDescription>
  <PartID>1195825151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FolderItemFromManifestPath(path As String, relativeTo As FolderItem = Nil) As FolderItem</SourceLine>
   <SourceLine>/// Returns the FolderItem referenced by `path`, optionally relative to `relativeTo`.</SourceLine>
   <SourceLine>/// May raise a `XKException`.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var prefix As String = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var pathSep As String</SourceLine>
   <SourceLine>#If TargetWindows Then</SourceLine>
   <SourceLine>pathSep = "\"</SourceLine>
   <SourceLine>#Else</SourceLine>
   <SourceLine>pathSep = "/"</SourceLine>
   <SourceLine>#EndIf</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Is what is passed actually a relative path?</SourceLine>
   <SourceLine>#If TargetWindows Then</SourceLine>
   <SourceLine>If path.Middle(1, 1) = ":" Then</SourceLine>
   <SourceLine>Return GetFolderItem(path, FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If path.Left(1) = pathSep Then</SourceLine>
   <SourceLine>relativeTo = GetFolderItem(SpecialFolder.CurrentWorkingDirectory.NativePath.Left(3))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#Else</SourceLine>
   <SourceLine>If path.Left(1) = pathSep Then</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>Var f As New FolderItem(path, FolderItem.PathModes.Shell)</SourceLine>
   <SourceLine>Return f</SourceLine>
   <SourceLine>Catch e</SourceLine>
   <SourceLine>Raise New XKException("Unable to retrieve FolderItem with path `" + path + "`.")</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prefix = pathSep</SourceLine>
   <SourceLine>#EndIf</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Seems to be a relative path.</SourceLine>
   <SourceLine>If relativeTo = Nil Then relativeTo = SpecialFolder.CurrentWorkingDirectory</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>path = relativeTo.NativePath + pathSep + path</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var newParts() As String</SourceLine>
   <SourceLine>Var pathParts() As String = path.Split(pathSep)</SourceLine>
   <SourceLine>For i As Integer = 0 to pathParts.LastIndex</SourceLine>
   <SourceLine>Var p As String = pathParts(i)</SourceLine>
   <SourceLine>If p = "" Then</SourceLine>
   <SourceLine>// Happens on Windows as it appends `pathSep` onto the end of NativePath if `relativeTo` is a folder.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf p = "." Then</SourceLine>
   <SourceLine>// Skip this path component.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf p = ".." Then</SourceLine>
   <SourceLine>// Remove the last path component from `newParts`.</SourceLine>
   <SourceLine>If newParts.Count &gt; 0 Then Call newParts.Pop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// Nothing special about this path component.</SourceLine>
   <SourceLine>newParts.Add(p)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>path = prefix + String.FromArray(newParts, pathSep)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>Var f As New FolderItem(path, FolderItem.PathModes.Shell)</SourceLine>
   <SourceLine>Return f</SourceLine>
   <SourceLine>Catch e</SourceLine>
   <SourceLine>Raise New XKException("Unable to retrieve FolderItem with path `" + path + "`.")</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>path As String, relativeTo As FolderItem = Nil</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>Parse</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Parses the project file adhering to its set options.</CodeDescription>
  <PartID>877957119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Parse()</SourceLine>
   <SourceLine>/// Parses the project file adhering to its set options.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ParseManifest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ParseItems</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear out any references to items in Root that are excluded.</SourceLine>
   <SourceLine>If Options.RemoveExcludedItems Then</SourceLine>
   <SourceLine>PurgeExcludedChildren(Self.Root)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ComputeLineAndCommentCounts</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ParseItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Parses those files in the project manifest that have not been excluded. Assumes `ParseManifest` has already executed.</CodeDescription>
  <PartID>942989311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ParseItems()</SourceLine>
   <SourceLine>/// Parses those items in the project manifest that have not been excluded. </SourceLine>
   <SourceLine>/// Assumes `ParseManifest` has already executed.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For i As Integer = Items.LastIndex DownTo 0</SourceLine>
   <SourceLine>Var item As XKItem = Self.Items(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If item.Type &lt;&gt; XojoKit.ItemTypes.Folder And item.Type &lt;&gt; XojoKit.ItemTypes.Root Then</SourceLine>
   <SourceLine>item.Parse(Options)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Since we only now know the item's scope, exclude it if needed.</SourceLine>
   <SourceLine>If Options.ExcludePrivate And item.Scope = XojoKit.Scopes.Private_ Then</SourceLine>
   <SourceLine>Self.Items(i).IsExcluded = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If at least one item is external then store this fact.</SourceLine>
   <SourceLine>If item.IsExternal Then mContainsExternalItems = True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Update the project's count of individual item counts.</SourceLine>
   <SourceLine>UpdateItemCounts(item)</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Find the classes and modules contained within other modules.</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If item.Type &lt;&gt; XojoKit.ItemTypes.Module_ Then Continue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each query As XKItem In Self.Items</SourceLine>
   <SourceLine>If query.ParentID = item.ID Then</SourceLine>
   <SourceLine>// `item` is the parent of `query`.</SourceLine>
   <SourceLine>If query.Type = XojoKit.ItemTypes.Class_ Then</SourceLine>
   <SourceLine>item.Classes.Add(query)</SourceLine>
   <SourceLine>ElseIf query.Type = XojoKit.ItemTypes.Module_ Then</SourceLine>
   <SourceLine>item.Modules.Add(query)</SourceLine>
   <SourceLine>ElseIf query.Type = XojoKit.ItemTypes.Interface_ Then</SourceLine>
   <SourceLine>item.Interfaces.Add(query)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next query</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Self.FileFormat = XojoKit.FileFormats.Project Then</SourceLine>
   <SourceLine>FindApplicationObject</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Options.ExcludeAppObject Then</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If item.IsApplicationObject Then</SourceLine>
   <SourceLine>item.IsExcluded = True</SourceLine>
   <SourceLine>Exit</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Do we need to remove excluded items?</SourceLine>
   <SourceLine>If Options.RemoveExcludedItems Then</SourceLine>
   <SourceLine>For i As Integer = Items.LastIndex DownTo 0</SourceLine>
   <SourceLine>If Items(i).IsExcluded Then</SourceLine>
   <SourceLine>Items.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Do we need to remove excluded members?</SourceLine>
   <SourceLine>If Options.RemoveExcludedMembers Then</SourceLine>
   <SourceLine>For Each item As XKItem In Items</SourceLine>
   <SourceLine>// Classes.</SourceLine>
   <SourceLine>For i As Integer = item.Classes.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Classes(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Classes.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Constants.</SourceLine>
   <SourceLine>For i As Integer = item.Constants.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Constants(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Constants.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Delegates.</SourceLine>
   <SourceLine>For i As Integer = item.Delegates.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Delegates(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Delegates.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Enums.</SourceLine>
   <SourceLine>For i As Integer = item.Enums.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Enums(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Enums.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Event definitions.</SourceLine>
   <SourceLine>For i As Integer = item.EventDefinitions.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.EventDefinitions(i).IsExcluded Then</SourceLine>
   <SourceLine>item.EventDefinitions.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Events.</SourceLine>
   <SourceLine>For i As Integer = item.Events.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Events(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Events.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Interfaces.</SourceLine>
   <SourceLine>For i As Integer = item.Interfaces.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Interfaces(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Interfaces.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Methods.</SourceLine>
   <SourceLine>For i As Integer = item.Methods.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Methods(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Methods.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Modules.</SourceLine>
   <SourceLine>For i As Integer = item.Modules.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Modules(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Modules.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Notes.</SourceLine>
   <SourceLine>For i As Integer = item.Notes.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Notes(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Notes.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Properties.</SourceLine>
   <SourceLine>For i As Integer = item.Properties.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Properties(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Properties.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Structures.</SourceLine>
   <SourceLine>For i As Integer = item.Structures.LastIndex DownTo 0</SourceLine>
   <SourceLine>If item.Structures(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Structures.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ParseManifest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Parses the contents of the manifest.</CodeDescription>
  <PartID>1005135871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ParseManifest()</SourceLine>
   <SourceLine>/// Parses the contents of the manifest. May raise a `XKException`.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Sanity checks.</SourceLine>
   <SourceLine>If Self.Manifest = Nil Then</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("Cannot parse the manifest as it is Nil.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If Not Self.Manifest.Exists Then</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("Cannot parse the manifest file as it does not exist.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Is this a Xojo Project or XML manifest?</SourceLine>
   <SourceLine>Select Case Self.Manifest.NameExtensionMBS</SourceLine>
   <SourceLine>Case "xojo_project"</SourceLine>
   <SourceLine>Self.FileFormat = XojoKit.FileFormats.Project</SourceLine>
   <SourceLine>Self.Name = Self.Manifest.NameWithoutExtensionMBS</SourceLine>
   <SourceLine>ParseProjectManifest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "xojo_xml_project"</SourceLine>
   <SourceLine>Self.FileFormat = XojoKit.FileFormats.XML</SourceLine>
   <SourceLine>Self.Name = Self.Manifest.NameWithoutExtensionMBS</SourceLine>
   <SourceLine>ParseXMLManifest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Raise New XKException("Unknown project manifest file format. Only `.xojo_project` and " + _</SourceLine>
   <SourceLine>"`.xojo_xml_project` formats are supported.")</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// =================================================</SourceLine>
   <SourceLine>// COMPUTE EACH ITEM'S PATH AND FULLY QUALIFIED NAME</SourceLine>
   <SourceLine>// =================================================</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>Var path() As String</SourceLine>
   <SourceLine>Var fqn() As String // Will be concatenated to form the item's FQN.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If item.ParentId = 0 Then</SourceLine>
   <SourceLine>// This is an item at the root of the project.</SourceLine>
   <SourceLine>item.FQN = item.Name</SourceLine>
   <SourceLine>Continue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This item is within folder(s) and/or module(s). Get its parent(s).</SourceLine>
   <SourceLine>Var current As XKItem = ItemContainers.Lookup(item.ParentID, Nil)</SourceLine>
   <SourceLine>Var parents() As XKItem</SourceLine>
   <SourceLine>If current &lt;&gt; Nil Then</SourceLine>
   <SourceLine>Do</SourceLine>
   <SourceLine>If current.Type &lt;&gt; XojoKit.ItemTypes.Root Then</SourceLine>
   <SourceLine>parents.Add(current)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>current = Self.ItemContainers.Lookup(current.ParentID, Nil)</SourceLine>
   <SourceLine>Loop Until current Is Nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add the parent names to the FQN array.</SourceLine>
   <SourceLine>For i As Integer = parents.LastIndex DownTo 0</SourceLine>
   <SourceLine>path.Add(parents(i).Name)</SourceLine>
   <SourceLine>If parents(i).Type = XojoKit.ItemTypes.Folder Then</SourceLine>
   <SourceLine>path(path.LastIndex) = path(path.LastIndex) + "&gt;"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>fqn.Add(parents(i).Name)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Lastly append item's name to the FQN array.</SourceLine>
   <SourceLine>fqn.Add(item.Name)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// We can now construct the folder/module path from the parents.</SourceLine>
   <SourceLine>// Modules and folders are separated with `&gt;`. Items in the root of the project have an empty path.</SourceLine>
   <SourceLine>item.Path = String.FromArray(path, ".").ReplaceAll("&gt;.", "&gt;")</SourceLine>
   <SourceLine>If item.Path.EndsWith("&gt;") Then item.Path = item.Path.TrimRight("&gt;")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// The fully qualified name is a dot-separated path that excludes folders.</SourceLine>
   <SourceLine>item.FQN = String.FromArray(fqn, ".")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// =================================================</SourceLine>
   <SourceLine>// EXCLUSIONS</SourceLine>
   <SourceLine>// =================================================</SourceLine>
   <SourceLine>For i As Integer = Self.Items.LastIndex DownTo 0</SourceLine>
   <SourceLine>Var item As XKItem = Self.Items(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Exclude any items in the option's list of excluded object types.</SourceLine>
   <SourceLine>For Each excludedType As XojoKit.ItemTypes In Options.ExcludedItemTypes</SourceLine>
   <SourceLine>If item.Type = excludedType Then</SourceLine>
   <SourceLine>Self.Items(i).IsExcluded = True</SourceLine>
   <SourceLine>If Self.ItemContainers.HasKey(item.ID) Then</SourceLine>
   <SourceLine>XKItem(Self.ItemContainers.Value(item.ID)).IsExcluded = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>GoTo NextItem</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next excludedType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Exclude any items in the option's list of excluded paths.</SourceLine>
   <SourceLine>For Each excludedPath As String In Options.ExcludedPaths</SourceLine>
   <SourceLine>If item.Path.IndexOf(excludedPath) &lt;&gt; -1 Or (item.Path = "" And item.Name = excludedPath) Then</SourceLine>
   <SourceLine>Self.Items(i).IsExcluded = True</SourceLine>
   <SourceLine>If Self.ItemContainers.HasKey(item.ID) Then</SourceLine>
   <SourceLine>XKItem(Self.ItemContainers.Value(item.ID)).IsExcluded = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>GoTo NextItem</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next excludedPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Exclude any items in the option's list of excluded FQNs.</SourceLine>
   <SourceLine>For Each excludedFQN As String In Options.ExcludedFQNs</SourceLine>
   <SourceLine>If item.FQN.IndexOf(excludedFQN) &lt;&gt; -1 Then</SourceLine>
   <SourceLine>Self.Items(i).IsExcluded = True</SourceLine>
   <SourceLine>If Self.ItemContainers.HasKey(item.ID) Then</SourceLine>
   <SourceLine>XKItem(Self.ItemContainers.Value(item.ID)).IsExcluded = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>GoTo NextItem</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next excludedFQN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>NextItem:</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// =================================================</SourceLine>
   <SourceLine>// Set each item's children.</SourceLine>
   <SourceLine>For Each entry As DictionaryEntry In Self.ItemContainers</SourceLine>
   <SourceLine>Var current As XKItem = entry.Value</SourceLine>
   <SourceLine>// Find every item whose parent is the current one.</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If item.ParentID = current.ID Then</SourceLine>
   <SourceLine>current.Children.Add(item)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine>// Sort this item's children alphabetically (folders first, then modules, then all other item types)</SourceLine>
   <SourceLine>current.Children.Sort(AddressOf ItemChildrenSortDelegate)</SourceLine>
   <SourceLine>Next entry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ParseProjectManifest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Parses the contents of a "Xojo Project" format manifest. May raise a `XKException`.</CodeDescription>
  <PartID>1691418623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ParseProjectManifest()</SourceLine>
   <SourceLine>/// Parses the contents of a "Xojo Project" format manifest. May raise a `XKException`.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>/// Assumes `Self.Manifest` is actually a `.xojo_project` file.</SourceLine>
   <SourceLine>/// Line format:</SourceLine>
   <SourceLine>/// KEY EQUAL value</SourceLine>
   <SourceLine>/// value = (component(;component)*)?</SourceLine>
   <SourceLine>/// component = STRING | NUMBER | BOOLEAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Many line values follow a specified format of multiple semicolon-delimited components.</SourceLine>
   <SourceLine>// KEY=NAME;PATH;ID;PARENT_ID;UNKNOWN</SourceLine>
   <SourceLine>Const COMPONENT_NAME = 0</SourceLine>
   <SourceLine>Const COMPONENT_PATH = 1</SourceLine>
   <SourceLine>Const COMPONENT_ID = 2</SourceLine>
   <SourceLine>Const COMPONENT_PARENT_ID = 3</SourceLine>
   <SourceLine>Const COMPONENT_UNKNOWN = 4</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear out the `ItemContainers` dictionary and add a new project root.</SourceLine>
   <SourceLine>Self.ItemContainers = New Dictionary</SourceLine>
   <SourceLine>mRoot = New XKItem(Self)</SourceLine>
   <SourceLine>mRoot.Type = XojoKit.ItemTypes.Root</SourceLine>
   <SourceLine>mRoot.Name = "Project Root"</SourceLine>
   <SourceLine>mRoot.ID = 0</SourceLine>
   <SourceLine>mRoot.ParentID = -1</SourceLine>
   <SourceLine>ItemContainers.Value(mRoot.ID) = mRoot</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear out any existing items.</SourceLine>
   <SourceLine>Self.Items.RemoveAll</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Get the contents of the manifest.</SourceLine>
   <SourceLine>Var tin As TextInputStream</SourceLine>
   <SourceLine>Var contents As String</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>tin = TextInputStream.Open(Self.Manifest)</SourceLine>
   <SourceLine>contents = tin.ReadAll.ReplaceLineEndings(EndOfLine.UNIX)</SourceLine>
   <SourceLine>tin.Close</SourceLine>
   <SourceLine>Catch e As IOException</SourceLine>
   <SourceLine>Raise New IOException("Unable to read the contents of the manifest file: `" + e.Message + "`.")</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Get the lines.</SourceLine>
   <SourceLine>Var lines() As String = contents.Split(EndOfLine.UNIX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Remove empty lines.</SourceLine>
   <SourceLine>For i As Integer = lines.LastIndex DownTo 0</SourceLine>
   <SourceLine>If lines(i).IsEmpty Then lines.RemoveAt(i)</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Analyse each line of the manifest.</SourceLine>
   <SourceLine>For Each line As String In lines</SourceLine>
   <SourceLine>// Get the line's key and raw value.</SourceLine>
   <SourceLine>Var key As String = line.Left(line.IndexOf("="))</SourceLine>
   <SourceLine>Var value As String = line.Middle(line.IndexOf("=") + 1).Trim</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Split the value into its components.</SourceLine>
   <SourceLine>Var components() As String = value.Split(";")</SourceLine>
   <SourceLine>If components.Count = 0 Then</SourceLine>
   <SourceLine>// Not interested in this.</SourceLine>
   <SourceLine>Continue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Select Case key</SourceLine>
   <SourceLine>Case "MacCarbonMachName"</SourceLine>
   <SourceLine>Self.NameMac = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "LinuxX86Name"</SourceLine>
   <SourceLine>Self.NameLinux = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "WindowsName"</SourceLine>
   <SourceLine>Self.NameWindows = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "HiDPI"</SourceLine>
   <SourceLine>Self.SupportsHiDPI = If(value = "True", True, False)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DarkMode"</SourceLine>
   <SourceLine>Self.SupportsDarkMode = If(value = "True", True, False)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Type"</SourceLine>
   <SourceLine>Self.Type = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "RBProjectVersion"</SourceLine>
   <SourceLine>Self.RBProjectVersion = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MinIDEVersion"</SourceLine>
   <SourceLine>Self.MinimumIDEVersion = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "OrigIDEVersion"</SourceLine>
   <SourceLine>Self.OriginalIDEVersion = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Class", "Module", "Interface"</SourceLine>
   <SourceLine>// Assert that the path is a known xojo file format.</SourceLine>
   <SourceLine>Var fileFormat As XojoKit.FileFormats = XojoKit.FileFormats.Unknown</SourceLine>
   <SourceLine>If components(COMPONENT_PATH).EndsWith(".xojo_code") Then</SourceLine>
   <SourceLine>fileFormat = XojoKit.FileFormats.Project</SourceLine>
   <SourceLine>ElseIf components(COMPONENT_PATH).EndsWith(".xojo_xml_code") Then</SourceLine>
   <SourceLine>fileFormat = XojoKit.FileFormats.XML</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If fileFormat = XojoKit.FileFormats.Unknown Then</SourceLine>
   <SourceLine>// We don't support files of this type.</SourceLine>
   <SourceLine>Continue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add this item to the project.</SourceLine>
   <SourceLine>Var item As New XKItem(Self)</SourceLine>
   <SourceLine>Var f As FolderItem = FolderItemFromManifestPath(components(COMPONENT_PATH), Self.Manifest.Parent)</SourceLine>
   <SourceLine>item.Name = components(COMPONENT_NAME)</SourceLine>
   <SourceLine>item.File = f</SourceLine>
   <SourceLine>item.FileFormat = fileFormat</SourceLine>
   <SourceLine>item.ID = Integer.FromHex(components(COMPONENT_ID).ReplaceAll("&amp;h", ""))</SourceLine>
   <SourceLine>item.ParentID = Integer.FromHex(components(COMPONENT_PARENT_ID).ReplaceAll("&amp;h", ""))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// XML files within a `.xojo_project` are external.</SourceLine>
   <SourceLine>item.IsExternal = If(fileFormat = XojoKit.FileFormats.XML, True, False)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If this is an XML file, get the XML node containing the item's properties.</SourceLine>
   <SourceLine>If item.IsExternal And item.FileFormat = XojoKit.FileFormats.XML Then</SourceLine>
   <SourceLine>Var itemXML As String</SourceLine>
   <SourceLine>// The item is contained within an external XML file.</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>tin = TextInputStream.Open(item.File)</SourceLine>
   <SourceLine>itemXML = tin.ReadAll</SourceLine>
   <SourceLine>tin.Close</SourceLine>
   <SourceLine>Catch e</SourceLine>
   <SourceLine>Raise New XKException("Unable to get the XML contents of the item's file.")</SourceLine>
   <SourceLine>Finally</SourceLine>
   <SourceLine>tin.Close</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>// Create an XML document from the string.</SourceLine>
   <SourceLine>Var xmlDoc As New XmlDocument(itemXML)</SourceLine>
   <SourceLine>// Extract the item's node from the document. </SourceLine>
   <SourceLine>// It's properties are contained within the first &lt;block&gt; element.</SourceLine>
   <SourceLine>// &lt;RBProject&gt;&lt;block&gt;...&lt;/block&gt;&lt;/RBProject&gt;</SourceLine>
   <SourceLine>item.XML = xmlDoc.FirstChild.FirstChild</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Self.Items.Add(item)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Modules can also be containers.</SourceLine>
   <SourceLine>If key = "Module" Then</SourceLine>
   <SourceLine>item.Type = XojoKit.ItemTypes.Module_</SourceLine>
   <SourceLine>Self.ItemContainers.Value(item.ID) = item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Folder"</SourceLine>
   <SourceLine>Var folder As New XKItem(Self)</SourceLine>
   <SourceLine>folder.Type = XojoKit.ItemTypes.Folder</SourceLine>
   <SourceLine>folder.Name = components(COMPONENT_NAME)</SourceLine>
   <SourceLine>folder.ID = Integer.FromHex(components(COMPONENT_ID).ReplaceAll("&amp;h", ""))</SourceLine>
   <SourceLine>folder.ParentID = Integer.FromHex(components(COMPONENT_PARENT_ID).ReplaceAll("&amp;h", ""))</SourceLine>
   <SourceLine>Self.Items.Add(folder)</SourceLine>
   <SourceLine>ItemContainers.Value(folder.ID) = folder</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MenuBar"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse MenuBars"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DesktopWindow", "Window"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse Windows"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DesktopToolbar", "Toolbar"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse ToolBars"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Worker"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse Workers"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "FileTypeSet"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse FileTypeSets"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MultiImage"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse ImageSets"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MajorVersion"</SourceLine>
   <SourceLine>Self.AppMajorVersion = Integer.FromString(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MinorVersion"</SourceLine>
   <SourceLine>Self.AppMinorVersion = Integer.FromString(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "SubVersion"</SourceLine>
   <SourceLine>Self.AppBugVersion = Integer.FromString(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "NonRelease"</SourceLine>
   <SourceLine>Self.AppNonReleaseVersion = Integer.FromString(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// We're not interested in the other manifest values.</SourceLine>
   <SourceLine>Continue</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Next line</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ParseXMLManifest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Parses the contents of a Xojo XML format manifest. May raise a `XKException`.</CodeDescription>
  <PartID>600942591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ParseXMLManifest()</SourceLine>
   <SourceLine>/// Parses the contents of a Xojo XML format manifest. May raise a `XKException`.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>/// Assumes `Self.Manifest` is actually a `.xojo_xml_project` file.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear out the item containers dictionary and add the root.</SourceLine>
   <SourceLine>Self.ItemContainers = New Dictionary</SourceLine>
   <SourceLine>mRoot = New XKItem(Self)</SourceLine>
   <SourceLine>mRoot.Type = XojoKit.ItemTypes.Root</SourceLine>
   <SourceLine>mRoot.Name = "Project Root"</SourceLine>
   <SourceLine>mRoot.ID = 0</SourceLine>
   <SourceLine>mRoot.ParentID = -1</SourceLine>
   <SourceLine>ItemContainers.Value(mRoot.ID) = mRoot</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear out any existing items.</SourceLine>
   <SourceLine>Self.Items.RemoveAll</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var xmlDoc As New XmlDocument(Self.Manifest)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var rbProject As XmlNode = xmlDoc.FirstChild</SourceLine>
   <SourceLine>// Get the versions used when saving the project.</SourceLine>
   <SourceLine>// The XML project format `RBProjectVersion` value is subtly different:</SourceLine>
   <SourceLine>// XML format:          "2022r1"</SourceLine>
   <SourceLine>// Xojo project format: "2022.01"</SourceLine>
   <SourceLine>Self.RBProjectVersion = rbProject.GetAttribute("version")</SourceLine>
   <SourceLine>Self.MinimumIDEVersion = rbProject.GetAttribute("MinIDEVersion")</SourceLine>
   <SourceLine>Self.XMLProjectFormat = rbProject.GetAttribute("FormatVersion")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For i As Integer = 0 To rbProject.ChildCount - 1</SourceLine>
   <SourceLine>Var block As XmlNode = rbProject.Child(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If block.Name = "block" Then</SourceLine>
   <SourceLine>Select Case block.GetAttribute("type")</SourceLine>
   <SourceLine>Case "Project"</SourceLine>
   <SourceLine>// Contains data about the project.</SourceLine>
   <SourceLine>For j As Integer = 0 To block.ChildCount - 1</SourceLine>
   <SourceLine>Var node As XmlNode = block.Child(j)</SourceLine>
   <SourceLine>Select Case node.Name</SourceLine>
   <SourceLine>Case "IDEVersion"</SourceLine>
   <SourceLine>Self.OriginalIDEVersion = node.FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MajorVersion"</SourceLine>
   <SourceLine>Self.AppMajorVersion = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MinorVersion"</SourceLine>
   <SourceLine>Self.AppMinorVersion = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "SubVersion"</SourceLine>
   <SourceLine>Self.AppBugVersion = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ProjectType"</SourceLine>
   <SourceLine>Self.Type = XMLProjectTypeToString(Integer.FromString(node.FirstChild.Value))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "BuildCarbonMachOName"</SourceLine>
   <SourceLine>Self.NameMac = If(node.FirstChild &lt;&gt; Nil, node.FirstChild.Value, "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "BuildWinName"</SourceLine>
   <SourceLine>Self.NameWindows = If(node.FirstChild &lt;&gt; Nil, node.FirstChild.Value, "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "BuildLinuxX86Name"</SourceLine>
   <SourceLine>Self.NameLinux = If(node.FirstChild &lt;&gt; Nil, node.FirstChild.Value, "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "HiDPI"</SourceLine>
   <SourceLine>If node.FirstChild = Nil Then</SourceLine>
   <SourceLine>Self.SupportsHiDPI = False</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Self.SupportsHiDPI = If(node.FirstChild.Value = "0", False, True)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DarkMode"</SourceLine>
   <SourceLine>If node.FirstChild = Nil Then</SourceLine>
   <SourceLine>Self.SupportsDarkMode = False</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Self.SupportsDarkMode = If(node.FirstChild.Value = "0", False, True)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// We're not interested in the other project block elements.</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Next j</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Module"</SourceLine>
   <SourceLine>// An internal item. Either a class, interface or module.</SourceLine>
   <SourceLine>// Build this item.</SourceLine>
   <SourceLine>Var item As New XKItem(Self)</SourceLine>
   <SourceLine>item.FileFormat = XojoKit.FileFormats.XML</SourceLine>
   <SourceLine>item.IsExternal = False</SourceLine>
   <SourceLine>item.File = Nil</SourceLine>
   <SourceLine>item.ID = Integer.FromString(block.GetAttribute("ID"))</SourceLine>
   <SourceLine>item.XML = block.Clone(True)</SourceLine>
   <SourceLine>item.Type = XojoKit.ItemTypes.Module_</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For k As Integer = 0 To block.ChildCount - 1</SourceLine>
   <SourceLine>Var node As XmlNode = block.Child(k)</SourceLine>
   <SourceLine>Select Case node.Name</SourceLine>
   <SourceLine>Case "ObjName"</SourceLine>
   <SourceLine>item.Name = node.FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ObjContainerID"</SourceLine>
   <SourceLine>item.ParentID = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Next k</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add this item to the project.</SourceLine>
   <SourceLine>Self.Items.Add(item)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Modules can also be containers.</SourceLine>
   <SourceLine>Self.ItemContainers.Value(item.ID) = item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ExternalCode"</SourceLine>
   <SourceLine>// An external item.</SourceLine>
   <SourceLine>// Build this item.</SourceLine>
   <SourceLine>Var item As New XKItem(Self)</SourceLine>
   <SourceLine>item.FileFormat = XojoKit.FileFormats.XML</SourceLine>
   <SourceLine>item.IsExternal = True</SourceLine>
   <SourceLine>item.ID = Integer.FromString(block.GetAttribute("ID"))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For k As Integer = 0 To block.ChildCount - 1</SourceLine>
   <SourceLine>Var node As XmlNode = block.Child(k)</SourceLine>
   <SourceLine>Select Case node.Name</SourceLine>
   <SourceLine>Case "ObjName"</SourceLine>
   <SourceLine>item.Name = node.FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ObjContainerID"</SourceLine>
   <SourceLine>item.ParentID = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "FullPath"</SourceLine>
   <SourceLine>item.File = FolderItemFromManifestPath(node.FirstChild.Value, Nil)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Extract the XML block node from this file.</SourceLine>
   <SourceLine>Var tin As TextInputStream = TextInputStream.Open(item.File)</SourceLine>
   <SourceLine>Var externalXML As String = tin.ReadAll</SourceLine>
   <SourceLine>tin.Close</SourceLine>
   <SourceLine>Var doc As New XmlDocument(externalXML)</SourceLine>
   <SourceLine>item.XML = doc.FirstChild.FirstChild.Clone(True)</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Next k</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add this item to the project.</SourceLine>
   <SourceLine>Self.Items.Add(item)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Folder"</SourceLine>
   <SourceLine>// A folder.</SourceLine>
   <SourceLine>Var folder As New XKItem(Self)</SourceLine>
   <SourceLine>folder.Type = XojoKit.ItemTypes.Folder</SourceLine>
   <SourceLine>folder.ID = Integer.FromString(block.GetAttribute("ID"))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For a As Integer = 0 To block.ChildCount - 1</SourceLine>
   <SourceLine>Var node As XmlNode = block.Child(a)</SourceLine>
   <SourceLine>Select Case node.Name</SourceLine>
   <SourceLine>Case "ObjName"</SourceLine>
   <SourceLine>folder.Name = node.FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "ObjContainerID"</SourceLine>
   <SourceLine>folder.ParentID = Integer.FromString(node.FirstChild.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>Next a</SourceLine>
   <SourceLine>ItemContainers.Value(folder.ID) = folder</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Worker"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse Workers"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DesktopWindow", "Window"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse Windows"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "MultiImage"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse ImageSets"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "FileTypes"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse FileTypeSets"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "DesktopToolbar", "Toolbar"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse Toolbars"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case "Menu"</SourceLine>
   <SourceLine>#Pragma Warning "TODO: Parse MenuBars"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// We're not interested in these blocks.</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>XMLProjectTypeToString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>XML projects store the project type as an integer. This returns that as a string.</CodeDescription>
  <PartID>1234163711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function XMLProjectTypeToString(value As Integer) As String</SourceLine>
   <SourceLine>/// XML projects store the project type as an integer. This returns that as a string.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Select Case value</SourceLine>
   <SourceLine>Case 0</SourceLine>
   <SourceLine>Return "Desktop"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case 1</SourceLine>
   <SourceLine>Return "Console"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case 2</SourceLine>
   <SourceLine>Raise New XKException("Unknown XML project type (" + value.ToString + ").")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case 3</SourceLine>
   <SourceLine>// Note that Web 2.0 apps in Xojo Project files are "Web2". In XML projects both Web 1.0 and </SourceLine>
   <SourceLine>// Web 2.0 projects have the same integer value. We'll therefore just return "Web".</SourceLine>
   <SourceLine>Return "Web"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case 4</SourceLine>
   <SourceLine>Return "iOS"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Raise New XKException("Unknown XML project type (" + value.ToString + ").")</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value As Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ComputeLineAndCommentCounts</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Computes the total number of user-written lines of code and comments.</CodeDescription>
  <PartID>1180858367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ComputeLineAndCommentCounts()</SourceLine>
   <SourceLine>/// Computes the total number of user-written lines of code and comments.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>mCodeLineCount = mCodeLineCount + item.CodeLineCount</SourceLine>
   <SourceLine>mCommentCount = mCommentCount + item.CommentCount</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ItemsMissingDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns an array of all items in the project with an empty description.</CodeDescription>
  <PartID>1061384191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ItemsMissingDescription(excludeConstructors As Boolean = False) As XKItem()</SourceLine>
   <SourceLine>/// Returns an array of all items in the project with an empty description.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>/// This is useful for ensuring you have added a description to all item members.</SourceLine>
   <SourceLine>/// We provide the option to exclude constructors because there is little point adding a description to</SourceLine>
   <SourceLine>/// them for many developers as the IDE does not show their descriptions in the IDE.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var missing() As XKItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If item.MembersMissingDescription(excludeConstructors).Count &gt; 0 Then</SourceLine>
   <SourceLine>missing.Add(item)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return missing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>excludeConstructors As Boolean = False</ItemParams>
  <ItemResult>XKItem()</ItemResult>
 </Method>
 <Method>
  <ItemName>ItemChildrenSortDelegate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>A delegate to sort an array of `XKItem` items alphabetically by name.</CodeDescription>
  <PartID>1779025919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ItemChildrenSortDelegate(item1 As XKItem, item2 As XKItem) As Integer</SourceLine>
   <SourceLine>/// A delegate to sort an array of `XKItem` items alphabetically by name.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If item1.Name &gt; item2.Name Then</SourceLine>
   <SourceLine>Return 1</SourceLine>
   <SourceLine>ElseIf item1.Name &lt; item2.Name Then</SourceLine>
   <SourceLine>Return -1</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return 0</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>item1 As XKItem, item2 As XKItem</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>FindApplicationObject</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>For "Xojo Project" format projects, find the item that is the application object.</CodeDescription>
  <PartID>1733214207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub FindApplicationObject()</SourceLine>
   <SourceLine>/// For "Xojo Project" format projects, find the item that is the application object.</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>/// This process is not required for XML projects as the application object item has a special </SourceLine>
   <SourceLine>/// flag (`&lt;IsApplicationObject&gt;1&lt;/IsApplicationObject&gt;`).</SourceLine>
   <SourceLine>/// Thanks to Norm for help with this: https://ifnotnil.com/t/re-tree-problem/2450/7?u=garry</SourceLine>
   <SourceLine>/// See also my public post: https://forum.xojo.com/t/xojo-project-manifest/69783/10</SourceLine>
   <SourceLine>///</SourceLine>
   <SourceLine>/// Essentially we need to find the **first** item whose super class is the correct "Application" class (this </SourceLine>
   <SourceLine>/// will vary by project type, e.g. DesktopApplication, WebApplication, etc). This is the **Prime** item. </SourceLine>
   <SourceLine>/// If this is the only item with that superclass then that's the AppObject.</SourceLine>
   <SourceLine>/// If there are multiple items in the project that subclass the "Application" class then we'll assume </SourceLine>
   <SourceLine>/// that the AppObject is the first item found that inherits from the Prime item.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var prime As XKItem // The first item that subclasses the Application super.</SourceLine>
   <SourceLine>Var appSubclassCount As Integer = 0 // How many items subclass the Application super.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// What is the expected Application superclass?</SourceLine>
   <SourceLine>Var superClass As String</SourceLine>
   <SourceLine>Select Case Self.Type</SourceLine>
   <SourceLine>Case "Desktop"</SourceLine>
   <SourceLine>// There are two types of application superclass (Application and DesktopApplication). We'll have</SourceLine>
   <SourceLine>// to check for both of these separately so do nothing for now.</SourceLine>
   <SourceLine>superClass = ""</SourceLine>
   <SourceLine>Case "Console"</SourceLine>
   <SourceLine>superClass = "ConsoleApplication"</SourceLine>
   <SourceLine>Case "Web", "Web2"</SourceLine>
   <SourceLine>superClass = "WebApplication"</SourceLine>
   <SourceLine>Case "iOS"</SourceLine>
   <SourceLine>superClass = "MobileApplication"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("Unknown Xojo project type `" + Self.type + "`")</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Find the prime and count the number of items that subclass the application super.</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If Self.Type = "Desktop" Then</SourceLine>
   <SourceLine>If item.Superclass = "DesktopApplication" Or item.Superclass = "Application" Then</SourceLine>
   <SourceLine>If appSubclassCount = 0 Then</SourceLine>
   <SourceLine>prime = item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>appSubclassCount = appSubclassCount + 1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If item.Superclass = superClass Then</SourceLine>
   <SourceLine>If appSubclassCount = 0 Then</SourceLine>
   <SourceLine>prime = item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>appSubclassCount = appSubclassCount + 1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Var foundAppObject As Boolean = False</SourceLine>
   <SourceLine>If appSubclassCount = 0 Then</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("Could not find the application object in the project.")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If appSubclassCount = 1 And prime.Name = "App" Then</SourceLine>
   <SourceLine>// This is the commonest scenario. The prime is the AppObject.</SourceLine>
   <SourceLine>prime.IsApplicationObject = True</SourceLine>
   <SourceLine>foundAppObject = True</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// Find the first item whose super is the prime.</SourceLine>
   <SourceLine>For Each item As XKItem In Self.Items</SourceLine>
   <SourceLine>If item.Superclass = prime.Name Then</SourceLine>
   <SourceLine>item.IsApplicationObject = True</SourceLine>
   <SourceLine>foundAppObject = True</SourceLine>
   <SourceLine>Exit</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next item</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Not foundAppObject Then</SourceLine>
   <SourceLine>Raise New UnsupportedOperationException("Could not find the application object in the project.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ShouldExcludeMember</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns True if `member` should be excluded from a project based on `options`.</CodeDescription>
  <PartID>1768421375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ShouldExcludeMember(member As XKMember, options As XKOptions) As Boolean</SourceLine>
   <SourceLine>/// Returns True if `member` should be excluded from a project based on `options`.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If (options.ExcludePrivate And member.Scope = XojoKit.Scopes.Private_) Or _</SourceLine>
   <SourceLine>options.ExcludedMemberTypes.IndexOf(member.MemberType) &lt;&gt; -1 Then</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>member As XKMember, options As XKOptions</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateItemCounts</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Determine's the type of item passed and increments the project's internal item type count properties.</CodeDescription>
  <PartID>936980479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateItemCounts(item As XKItem)</SourceLine>
   <SourceLine>/// Determine's the type of item passed and increments the project's internal item type count properties.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Select Case item.Type</SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.Class_</SourceLine>
   <SourceLine>mClassCount = mClassCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.FileType_</SourceLine>
   <SourceLine>mFileTypeCount = mFileTypeCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.ImageSet_</SourceLine>
   <SourceLine>mImageSetCount = mImageSetCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.Interface_</SourceLine>
   <SourceLine>mInterfaceCount = mInterfaceCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.MenuBar_</SourceLine>
   <SourceLine>mMenuBarCount = mMenuBarCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.Module_</SourceLine>
   <SourceLine>mModuleCount = mModuleCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.ToolBar_</SourceLine>
   <SourceLine>mToolBarCount = mToolBarCount + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case XojoKit.ItemTypes.Window_</SourceLine>
   <SourceLine>mWindowCount = mWindowCount + 1</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>item As XKItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PurgeExcludedChildren</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Loops through item's children, removing any that are marked as excluded.</CodeDescription>
  <PartID>302759935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PurgeExcludedChildren(item As XKItem)</SourceLine>
   <SourceLine>/// Loops through item's children, removing any that are marked as excluded.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For i As Integer = item.Children.LastIndex DownTo 0</SourceLine>
   <SourceLine>Var child As XKItem = item.Children(i)</SourceLine>
   <SourceLine>If child.Children.Count &gt; 0 Then</SourceLine>
   <SourceLine>PurgeExcludedChildren(child)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If item.Children(i).IsExcluded Then</SourceLine>
   <SourceLine>item.Children.RemoveAt(i)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>item As XKItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>AppBugVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app bug version.</CodeDescription>
  <PartID>821102591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AppBugVersion As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AppBugVersion As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>AppMajorVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app major version.</CodeDescription>
  <PartID>1393862655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AppMajorVersion As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AppMajorVersion As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>AppMinorVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app minor version.</CodeDescription>
  <PartID>960090111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AppMinorVersion As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AppMinorVersion As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>AppNonReleaseVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app non-release version.</CodeDescription>
  <PartID>1421508607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AppNonReleaseVersion As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AppNonReleaseVersion As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>FileFormat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The file format of the project manifest.</CodeDescription>
  <PartID>2053380095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FileFormat As XojoKit.FileFormats = XojoKit.FileFormats.Project</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FileFormat As XojoKit.FileFormats = XojoKit.FileFormats.Project</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Items()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The items (classes, modules and interfaces) within this project.</CodeDescription>
  <PartID>1200119807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Items() As XKItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Items() As XKItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Manifest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The Xojo project manifest file.</CodeDescription>
  <PartID>1061197823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Manifest As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Manifest As FolderItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MinimumIDEVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The minimum required Xojo IDE version.</CodeDescription>
  <PartID>1863399423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MinimumIDEVersion As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MinimumIDEVersion As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Options</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The options to use when parsing the project.</CodeDescription>
  <PartID>1026301951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Options As XKOptions</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Options As XKOptions</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>OriginalIDEVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The version of the IDE the project was originally saved in.</CodeDescription>
  <PartID>1064126463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>OriginalIDEVersion As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>OriginalIDEVersion As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>RBProjectVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The IDE version the project was saved in.</CodeDescription>
  <PartID>1136789503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>RBProjectVersion As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>RBProjectVersion As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Type</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The project type (e.g. "Desktop").</CodeDescription>
  <PartID>2008066047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Type As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Type As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>XMLProjectFormat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>For XML projects, this is the value of the `FormatVersion` attribute in the `RBProject` node.</CodeDescription>
  <PartID>5969919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>XMLProjectFormat As String = "-1"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>XMLProjectFormat As String = "-1"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCodeLineCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Backs `CodeLineCount`. The total number of user-written lines of code in this project excluding comments. Computed after the project is parsed.</CodeDescription>
  <PartID>1800409087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCodeLineCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCodeLineCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCommentCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Backs `CommentCount`. The total number of comments in this project. Computed after the project is parsed.</CodeDescription>
  <PartID>884453375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCommentCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCommentCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>CodeLineCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of user-written lines of code in this project excluding comments. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>28323839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CodeLineCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CodeLineCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mCodeLineCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>CommentCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of comments in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>913776639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CommentCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CommentCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mCommentCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ItemContainers</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>A dictionary mapping the ID of items that contain children to the actual item. Key = item ID (Integer), Value = XKItem. Used during parsing.</CodeDescription>
  <PartID>2110345215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ItemContainers As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ItemContainers As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>NameMac</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app's macOS name.</CodeDescription>
  <PartID>952276991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>NameMac As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>NameMac As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>NameLinux</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app's Linux name.</CodeDescription>
  <PartID>49016831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>NameLinux As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>NameLinux As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>NameWindows</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The app's Windows name.</CodeDescription>
  <PartID>1645101055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>NameWindows As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>NameWindows As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SupportsDarkMode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>True if this project supports dark mode.</CodeDescription>
  <PartID>253865983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SupportsDarkMode As Boolean = False</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SupportsDarkMode As Boolean = False</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SupportsHiDPI</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>True if this project supports HiDPI.</CodeDescription>
  <PartID>958240767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SupportsHiDPI As Boolean = False</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SupportsHiDPI As Boolean = False</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ContainsExternalItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>True if the project contains any external items. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1597429759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ContainsExternalItems As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ContainsExternalItems As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mContainsExternalItems</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mContainsExternalItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>True if the project contains any external items. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>49084415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mContainsExternalItems As Boolean = False</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mContainsExternalItems As Boolean = False</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ClassCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of classes in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1753765887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ClassCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mClassCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mClassCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>129576959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mClassCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mClassCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ModuleCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of modules in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1301868543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ModuleCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ModuleCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mModuleCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mModuleCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1754148863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mModuleCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mModuleCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>InterfaceCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of interfaces in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>596185087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>InterfaceCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>InterfaceCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mInterfaceCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mInterfaceCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1290272767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mInterfaceCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mInterfaceCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>FileTypeCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of file type sets in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>2036768767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FileTypeCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FileTypeCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mFileTypeCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mFileTypeCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1247240191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mFileTypeCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mFileTypeCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ImageSetCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of image sets in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>2056341503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ImageSetCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ImageSetCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mImageSetCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mImageSetCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>31191039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mImageSetCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mImageSetCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>WindowCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of windows in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1614755839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>WindowCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>WindowCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mWindowCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mWindowCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>538830847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mWindowCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mWindowCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ToolBarCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of toolbars in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1449041919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ToolBarCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ToolBarCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mToolBarCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mToolBarCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1927413759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mToolBarCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mToolBarCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MenuBarCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>Returns the total number of menubars in this project. Computed once after the project is parsed so inexpensive to call.</CodeDescription>
  <PartID>1367289855</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MenuBarCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MenuBarCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mMenuBarCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mMenuBarCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>275392511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mMenuBarCount As Integer = 0</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mMenuBarCount As Integer = 0</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Root</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The "virtual" root item. It contains all other items in the project.</CodeDescription>
  <PartID>757733375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Root As XKItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Root As XKItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>If Self.ItemContainers.Lookup(0, Nil) = Nil Then</SourceLine>
   <SourceLine>mRoot = New XKItem(Self)</SourceLine>
   <SourceLine>mRoot.Type = XojoKit.ItemTypes.Root</SourceLine>
   <SourceLine>mRoot.Name = "Project Root"</SourceLine>
   <SourceLine>mRoot.ID = 0</SourceLine>
   <SourceLine>mRoot.ParentID = -1</SourceLine>
   <SourceLine>'Return mRoot</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>mRoot = Self.ItemContainers.Value(0)</SourceLine>
   <SourceLine>'Return Self.ItemContainers.Value(0)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return mRoot</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mRoot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The "virtual" root item that contains all other items in the project.</CodeDescription>
  <PartID>1009020927</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mRoot As XKItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mRoot As XKItem</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The name of the project.</CodeDescription>
  <PartID>828788735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Name As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Name As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>TotalLineCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <CodeDescription>The total number of lines of code in the project (including comments).</CodeDescription>
  <PartID>38139903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Property TotalLineCount As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>TotalLineCount As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return mCodeLineCount + mCommentCount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AppBugVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AppMajorVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AppMinorVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AppNonReleaseVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimumIDEVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>OriginalIDEVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RBProjectVersion</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Type</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>XMLProjectFormat</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CodeLineCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CommentCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>NameMac</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>NameLinux</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>NameWindows</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SupportsDarkMode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SupportsHiDPI</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ContainsExternalItems</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ClassCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ModuleCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InterfaceCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FileTypeCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImageSetCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>WindowCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ToolBarCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FileFormat</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>XojoKit.FileFormats.Project</PropertyValue>
   <ItemType>XojoKit.FileFormats</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Project</ItemDef>
    <ItemDef>1 - Unknown</ItemDef>
    <ItemDef>2 - XML</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TotalLineCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
